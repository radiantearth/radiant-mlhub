[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
testpaths = ["test"]
addopts = "--block-network --record-mode once"
markers = [
  "collection_id",
  "dataset_id",
]

[tool.mypy]
strict = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
  "dateutil.*",
  "geojson.*",
  "requests_mock.*",
  "setuptools",
  "shapely.*",
  "sphinx_rtd_theme.*",
  "tqdm.*",
  "urllib3.*",
]
ignore_missing_imports = true

# Uncomment this if your project is hosted on GitHub:
# github_url = "https://github.com/<user or organization>/<project>/"

[tool.tbump.version]
current = "0.5.0"

# Example of a semver regexp.
# Make sure this matches current_version before
# using tbump
regex = '''
  (?P<major>\d+)
  \.
  (?P<minor>\d+)
  \.
  (?P<patch>\d+)
  -?
  (?P<release_level>a|b)?
  (?P<prerelease>\d+)?
  '''

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "v{new_version}"

# For each file to patch, add a [[tool.tbump.file]] config
# section containing the path of the file, relative to the
# tbump.toml location.
[[tool.tbump.file]]
src = "setup.py"
search = 'version="{current_version}"'

[[tool.tbump.file]]
src = "radiant_mlhub/__version__.py"

[[tool.tbump.file]]
src = "test/test_session.py"

[[tool.tbump.file]]
src = "test/test_cli.py"

[[tool.tbump.file]]
src = "binder/requirements.txt"
search = "radiant-mlhub=={current_version}"

[[tool.tbump.file]]
src = "recipe/meta.yaml"
search = "set version = \"{current_version}\""
