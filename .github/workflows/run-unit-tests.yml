name: Unit tests

on:

  push:

    branches:
      - master
      - dev

    paths:
      - 'radiant_mlhub/**'
      - setup.py
      - pyproject.toml
      - 'test/**'

  pull_request:

    branches:
      - master
      - dev

    paths:
      - 'radiant_mlhub/**'
      - setup.py
      - pyproject.toml
      - 'test/**'

jobs:

  lint:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install linter dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8~=3.8.0 mypy~=0.790

      - name: Run flake8 and mypy
        run: |
          flake8
          mypy radiant_mlhub

  test_linux:

    strategy:
      matrix:
        python-version:
          - 3.6
          - 3.7
          - 3.8
          - 3.9
        os:
          - ubuntu-18.04

    runs-on: ${{ matrix.os }}

    steps:

      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python-version }}

      # Caches the pip install directory based on the OS
      - name: Cache test dependencies (Linux)
        uses: actions/cache@v2
        if: startsWith(runner.os, 'Linux')
        with:
          path: ~/.cache/pip
          key: ${{ matrix.os }}-${{ matrix.python_version }}-test-dependencies-${{ hashFiles('requirements_dev.txt') }}

      # We run this every time because an if statement that checks each cache hit would be complicated
      #  and the step should take very little time if a cache was found
      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_dev.txt

      - name: Run tests
        run: |
          pip install .
          pytest test

  test_mac_windows:

    # Only run this for PRs against master and pushes to master
    if: (github.event_name == 'pull_request' && github.base_ref == 'master') || (github.event_name == 'push' && github.ref == 'master')

    strategy:
      matrix:
        python-version:
          - 3.6
          - 3.7
          - 3.8
          - 3.9
        os:
          - macos-10.15
          - windows-2019

    runs-on: ${{ matrix.os }}

    steps:

      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python-version }}

      # Caches the pip install directory based on the OS
      - name: Cache test dependencies (MacOS)
        uses: actions/cache@v2
        if: startsWith(runner.os, 'macOS')
        with:
          path: ~/Library/Caches/pip
          key: ${{ matrix.os }}-${{ matrix.python_version }}-test-dependencies-${{ hashFiles('requirements_dev.txt') }}

      - name: Cache test dependencies (Windows)
        uses: actions/cache@v2
        if: startsWith(runner.os, 'Windows')
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ matrix.os }}-${{ matrix.python_version }}-test-dependencies-${{ hashFiles('requirements_dev.txt') }}

      # We run this every time because an if statement that checks each cache hit would be complicated
      #  and the step should take very little time if a cache was found
      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_dev.txt

      - name: Run tests
        run: |
          pip install .
          pytest test