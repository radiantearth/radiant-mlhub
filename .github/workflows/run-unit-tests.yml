name: Unit tests

on:

  push:

    branches:
      - main

    paths:
      - 'radiant_mlhub/**'
      - setup.py
      - pyproject.toml
      - 'test/**'
      - '.github/workflows/run-unit-tests.yml'

  pull_request:

    branches:
      - main
      - new-api

    paths:
      - 'radiant_mlhub/**'
      - setup.py
      - pyproject.toml
      - 'test/**'
      - '.github/workflows/run-unit-tests.yml'

jobs:

  test:

    strategy:
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        exclude:
          - python-version: "3.10"
            os: windows-latest

    runs-on: ${{ matrix.os }}

    steps:

      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: requirements_testing.txt

      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_testing.txt

      - name: Run tests
        run: |
          pip install .
          pytest --record-mode once --block-network
          flake8
          flake8_nb examples/
          mypy radiant_mlhub

  # test importing all top-level modules, without polluting the package namespace
  # with requirements_testing.txt dependencies. (this simulates an end-user
  # install of the radiant-mlhub package).
  test_import_package:
    strategy:
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        exclude:
          - python-version: "3.10"
            os: windows-latest

    runs-on: ${{ matrix.os }}

    steps:

      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Import radiant_mlhub
        run: |
          python -m pip install --upgrade pip
          pip install .
          python -m "from radiant_mlhub import *"
          python -m "from radiant_mlhub.client import *"
          python -m "from radiant_mlhub.models import *"
